{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\nduda\\\\Documents\\\\GitHub\\\\Oxi-react\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { DataStore, Predicates } from \"@aws-amplify/datastore\";\nimport { Todo } from \"./src/models\";\nimport TodoList from \"./todo-list\";\nvar todos = [];\n\nvar TodoComponent = function (_Component) {\n  _inherits(TodoComponent, _Component);\n\n  var _super = _createSuper(TodoComponent);\n\n  function TodoComponent(props) {\n    var _this;\n\n    _classCallCheck(this, TodoComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      todos: todos\n    };\n    return _this;\n  }\n\n  _createClass(TodoComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadTasks();\n    }\n  }, {\n    key: \"loadTasks\",\n    value: function loadTasks() {\n      var self, dataStoreItems, todos;\n      return _regeneratorRuntime.async(function loadTasks$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              self = this;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(DataStore.query(Todo));\n\n            case 3:\n              dataStoreItems = _context.sent;\n              todos = _.map(dataStoreItems, function (item) {\n                return {\n                  id: item.id,\n                  name: item.name,\n                  description: item.description\n                };\n              });\n              self.setState({\n                todos: todos\n              });\n              console.log(todos);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"updateTodo\",\n    value: function updateTodo(todoId, todoText) {\n      var self, todo, original;\n      return _regeneratorRuntime.async(function updateTodo$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              self = this;\n              todo = _.find(self.state.todos, function (todo) {\n                return todo.id === todoId;\n              });\n              todo.task = todoText;\n              self.setState({\n                todos: self.state.todos\n              });\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(DataStore.query(Todo, todoId));\n\n            case 6:\n              original = _context2.sent;\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(DataStore.save(Todo.copyOf(original, function (updated) {\n                updated.task = todoText;\n              })));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, \"My Todo List\")), React.createElement(TodoList, {\n        todos: this.state.todos,\n        updateTodo: this.updateTodo.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return TodoComponent;\n}(Component);\n\nexport { TodoComponent as default };\n;","map":{"version":3,"sources":["C:/Users/nduda/Documents/GitHub/Oxi-react/App.js"],"names":["React","Component","_","DataStore","Predicates","Todo","TodoList","todos","TodoComponent","props","state","loadTasks","self","query","dataStoreItems","map","item","id","name","description","setState","console","log","todoId","todoText","todo","find","task","original","save","copyOf","updated","updateTodo","bind"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,wBAAtC;AACA,SAASC,IAAT;AACA,OAAOC,QAAP;AAGA,IAAIC,KAAK,GAAG,EAAZ;;IAEqBC,a;;;;;AACnB,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXH,MAAAA,KAAK,EAALA;AADW,KAAb;AAFiB;AAKlB;;;;WAED,6BAAoB;AAClB,WAAKI,SAAL;AACH;;;WAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,cAAAA,IADN,GACa,IADb;AAAA;AAAA,+CAI6BT,SAAS,CAACU,KAAV,CAAgBR,IAAhB,CAJ7B;;AAAA;AAIMS,cAAAA,cAJN;AAKMP,cAAAA,KALN,GAKcL,CAAC,CAACa,GAAF,CAAMD,cAAN,EAAsB,UAAAE,IAAI,EAAI;AACxC,uBAAO;AACLC,kBAAAA,EAAE,EAAED,IAAI,CAACC,EADJ;AAELC,kBAAAA,IAAI,EAAEF,IAAI,CAACE,IAFN;AAGLC,kBAAAA,WAAW,EAAEH,IAAI,CAACG;AAHb,iBAAP;AAKD,eANW,CALd;AAYEP,cAAAA,IAAI,CAACQ,QAAL,CAAc;AAAEb,gBAAAA,KAAK,EAALA;AAAF,eAAd;AAEAc,cAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;;AAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAiBA,oBAAiBgB,MAAjB,EAAyBC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACMZ,cAAAA,IADN,GACa,IADb;AAEMa,cAAAA,IAFN,GAEavB,CAAC,CAACwB,IAAF,CAAOd,IAAI,CAACF,KAAL,CAAWH,KAAlB,EAAyB,UAAAkB,IAAI;AAAA,uBAAIA,IAAI,CAACR,EAAL,KAAYM,MAAhB;AAAA,eAA7B,CAFb;AAGEE,cAAAA,IAAI,CAACE,IAAL,GAAYH,QAAZ;AACAZ,cAAAA,IAAI,CAACQ,QAAL,CAAc;AAAEb,gBAAAA,KAAK,EAAEK,IAAI,CAACF,KAAL,CAAWH;AAApB,eAAd;AAJF;AAAA,+CAMyBJ,SAAS,CAACU,KAAV,CAAgBR,IAAhB,EAAsBkB,MAAtB,CANzB;;AAAA;AAMQK,cAAAA,QANR;AAAA;AAAA,+CAOQzB,SAAS,CAAC0B,IAAV,CACJxB,IAAI,CAACyB,MAAL,CAAYF,QAAZ,EAAsB,UAAAG,OAAO,EAAI;AAC/BA,gBAAAA,OAAO,CAACJ,IAAR,GAAeH,QAAf;AACD,eAFD,CADI,CAPR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAeA,kBAAS;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,EAIE,oBAAC,QAAD;AACE,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWH,KADpB;AAEE,QAAA,UAAU,EAAE,KAAKyB,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAWD;;;;EAxDwChC,S;;SAAtBO,a;AAyDpB","sourcesContent":["import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { DataStore, Predicates } from \"@aws-amplify/datastore\";\r\nimport { Todo } from \"./src/models\";\r\nimport TodoList from \"./todo-list\";\r\n\r\n\r\nvar todos = [];\r\n\r\nexport default class TodoComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todos\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadTasks();\r\n}\r\n\r\n  async loadTasks() {\r\n    let self = this;\r\n\r\n    // Load todos from DataStore\r\n    let dataStoreItems = await DataStore.query(Todo);\r\n    let todos = _.map(dataStoreItems, item => {\r\n      return {\r\n        id: item.id,\r\n        name: item.name,\r\n        description: item.description\r\n      };\r\n    });\r\n    self.setState({ todos });\r\n\r\n    console.log(todos);\r\n  }\r\n\r\n  async updateTodo(todoId, todoText) {\r\n    let self = this;\r\n    let todo = _.find(self.state.todos, todo => todo.id === todoId);\r\n    todo.task = todoText;\r\n    self.setState({ todos: self.state.todos });\r\n  \r\n    const original = await DataStore.query(Todo, todoId);\r\n    await DataStore.save(\r\n      Todo.copyOf(original, updated => {\r\n        updated.task = todoText;\r\n      })\r\n    );\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h3>My Todo List</h3>\r\n        </div>\r\n        <TodoList\r\n          todos={this.state.todos}\r\n          updateTodo={this.updateTodo.bind(this)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}